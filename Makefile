# Some conveniences.  See <https://tech.davis-hansson.com/p/make/>
.DELETE_ON_ERROR:
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules

markdowns := $(shell find content/ -type f -name '*.md')

site/index.html: $(shell find content/) \
                 bin/* \
				 config/* \
				 posts/ \
				 series/* \
				 config/fonts.css \
				 config/highlightjs/default.min.css \
				 config/highlightjs/highlight.js \
				 $(markdowns:.md=.md.html)
	rm -rf site/*
	bin/generate

config/highlightjs/default.min.css config/highlightjs/highlight.js:
	$(MAKE) --directory=config/highlightjs -j 64

FONT_FACE = 'Akzidenz-Grotesk BQ Light'
config/fonts.css: config/font.otf config/font-italic.otf
	bin/font-face $(FONT_FACE) config/font.otf >$@
	bin/font-face --italic $(FONT_FACE) config/font-italic.otf >>$@

%.md.html: %.md
	bin/markdown $< >$@
	bin/highlight.py --in-place $@

# Dependencies of a markdown file can be deduced by a script.
# The output file (*.d) adds make dependencies to site/index.html.
# The make dependencies are included at the bottom of this file.  Those
# dependencies so added will then be made according to their recipes (e.g.
# %_small.webp).
%.md.d: %.md %.md.html bin/dependencies
	bin/dependencies $< >$@

# Create PNG images from graphviz files (.dot files)
%.dot.png: %.dot
	dot -T png -o $@ $< 

# Set width of small images to 700 pixels, scaling the height proportionally.
%_small.webp: %.* bin/shrink
	bin/shrink $< $@
	
# Cache image dimensions in JSON files, so the generator doesn't have to
# fork imagemagick's "identify" for every image when it runs.
%.imginfo.json: %
	identify -format '{"width": %w, "height": %h}\n' $< >$@

.PHONY: clean
clean:
	rm -rf site/*
	
.PHONY: clobber
clobber: clean
	find content -name '*.md.d' -o -name '*_small.webp' -o -name '*.imginfo.json' -o -name '*.md.html' -exec rm {} \;
	$(MAKE) --directory=config/highlightjs clean
	rm -f config/fonts.css
	# leave the *.dot.png files... some aren't generated by make

.PHONY: profile
profile:
	rm -rf site/*
	python3 -m cProfile -o profile.out bin/generate
	bin/visualize-profile profile.out &

# Include dependencies parsed from input markdown files,
# e.g. links to *_small.webp, *.dot.png
include $(markdowns:.md=.md.d)
