#!/usr/bin/env python3

"""Print the make dependencies of a specified markdown file."""


import mistune
from pathlib import Path
import re
import sys


class ImageScrapingRenderer(mistune.Renderer):
    def __init__(self, img_src_output_list):
        self.img_src_output_list = img_src_output_list
        super().__init__()

    def image(self, src, title, text):
        """Rendering a image with title and text.
        
        :param src: source link of the image.
        :param title: title text of the image.
        :param text: alt text of the image.
        """
        self.img_src_output_list.append(src)
        return super().image(src, title, text)
    

if __name__ == '__main__':
    dep_file_pattern = r'.*_small\.webp$|.*\.dot\.png$'
    img_srcs = []
    md_path = Path(sys.argv[1])

    visitor = mistune.Markdown(renderer=ImageScrapingRenderer(img_srcs))
    visitor(md_path.read_text())

    dep_srcs = [src for src in img_srcs if re.match(dep_file_pattern, src)]
    # Paths (*srcs) so far are relative to the directory of the markdown file.
    # We want them to be relative to the repository root for purposes of
    # appearing in a make recipe.
    # The command line argument (the path to the markdown file) will be
    # relative to the respository root, because the path was determined by
    # make.
    dep_paths = [md_path.parent/Path(src) for src in dep_srcs]

    print(f'site/index.html: {" ".join((str(path) for path in dep_paths))}')
